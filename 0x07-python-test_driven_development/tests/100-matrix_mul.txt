#100-matrix_mul.txt

#Doctests for matrix_mul
def matrix_mul(m_a, m_b):

    >>> matrix_mul = __import__('100-matrix_mul').matrix_mul

    >>> matrix_mul([[2, 3]], "ff")
    Traceback (most recent call last):
    TypeError: m_b must be a list

    >>> matrix_mul("ff", [[2, 3]])
    Traceback (most recent call last):
    TypeError: m_a must be a list

    >>> matrix_mul(['g'], [[33]])
    Traceback (most recent call last):
    TypeError: m_a must be a list of lists
    
    >>> matrix_mul([[6, 3]], ['g'])
    Traceback (most recent call last):
    TypeError: m_b must be a list of lists

    >>> matrix_mul([], [[4, 5]])
    Traceback (most recent call last):
    ValueError: m_a can't be empty

    >>> matrix_mul([[]], [[4, 5]])
    Traceback (most recent call last):
    ValueError: m_a can't be empty

    >>> matrix_mul([[4, 5]], [])
    Traceback (most recent call last):
    ValueError: m_b can't be empty

    >>> matrix_mul([[4, 5]], [[]])
    Traceback (most recent call last):
    ValueError: m_b can't be empty

    >>> matrix_mul([['g', 44]], [[33]])
    Traceback (most recent call last):
    TypeError: m_a should contain only integers or floats

    >>> matrix_mul([['g', 44.776]], [[33]])
    Traceback (most recent call last):
    TypeError: m_a should contain only integers or floats

    >>> matrix_mul([[33]], [['g', 44]])
    Traceback (most recent call last):
    TypeError: m_b should contain only integers or floats

    >>> matrix_mul([[33]], [['g', 44.45]])
    Traceback (most recent call last):
    TypeError: m_b should contain only integers or floats

    >>> matrix_mul([[33, 55], [2]], [[44.45]])
    Traceback (most recent call last):
    TypeError: each row of m_a must be of the same size

    >>> matrix_mul([[44.45]], [[33, 55], [2]])
    Traceback (most recent call last):
    TypeError: each row of m_b must be of the same size

